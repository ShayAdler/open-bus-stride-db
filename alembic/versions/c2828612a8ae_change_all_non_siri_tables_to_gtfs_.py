"""change all non-siri tables to gtfs tables

Revision ID: c2828612a8ae
Revises: 20227f4d325d
Create Date: 2021-12-19 14:57:58.431236+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import open_bus_stride_db


# revision identifiers, used by Alembic.
revision = 'c2828612a8ae'
down_revision = '20227f4d325d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gtfs_route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('line_ref', sa.Integer(), nullable=True),
    sa.Column('operator_ref', sa.Integer(), nullable=True),
    sa.Column('route_short_name', sa.String(), nullable=True),
    sa.Column('route_long_name', sa.String(), nullable=True),
    sa.Column('route_mkt', sa.String(), nullable=True),
    sa.Column('route_direction', sa.String(), nullable=True),
    sa.Column('route_alternative', sa.String(), nullable=True),
    sa.Column('agency_name', sa.String(), nullable=True),
    sa.Column('route_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gtfs_route'))
    )
    op.create_index(op.f('ix_gtfs_route_date'), 'gtfs_route', ['date'], unique=False)
    op.create_index(op.f('ix_gtfs_route_line_ref'), 'gtfs_route', ['line_ref'], unique=False)
    op.create_index(op.f('ix_gtfs_route_operator_ref'), 'gtfs_route', ['operator_ref'], unique=False)
    op.create_table('gtfs_stop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gtfs_stop'))
    )
    op.create_index(op.f('ix_gtfs_stop_code'), 'gtfs_stop', ['code'], unique=False)
    op.create_index(op.f('ix_gtfs_stop_date'), 'gtfs_stop', ['date'], unique=False)
    op.create_table('gtfs_ride',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gtfs_route_id', sa.Integer(), nullable=True),
    sa.Column('journey_ref', sa.String(), nullable=True),
    sa.Column('scheduled_start_time', open_bus_stride_db.model.base.DateTimeWithTimeZone(), nullable=True),
    sa.Column('vehicle_ref', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['gtfs_route_id'], ['gtfs_route.id'], name=op.f('fk_gtfs_ride_gtfs_route_id_gtfs_route')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gtfs_ride'))
    )
    op.create_index(op.f('ix_gtfs_ride_gtfs_route_id'), 'gtfs_ride', ['gtfs_route_id'], unique=False)
    op.create_index(op.f('ix_gtfs_ride_journey_ref'), 'gtfs_ride', ['journey_ref'], unique=False)
    op.create_index(op.f('ix_gtfs_ride_scheduled_start_time'), 'gtfs_ride', ['scheduled_start_time'], unique=False)
    op.create_index(op.f('ix_gtfs_ride_vehicle_ref'), 'gtfs_ride', ['vehicle_ref'], unique=False)
    op.create_table('gtfs_route_stop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gtfs_stop_id', sa.Integer(), nullable=True),
    sa.Column('gtfs_route_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gtfs_route_id'], ['gtfs_route.id'], name=op.f('fk_gtfs_route_stop_gtfs_route_id_gtfs_route')),
    sa.ForeignKeyConstraint(['gtfs_stop_id'], ['gtfs_stop.id'], name=op.f('fk_gtfs_route_stop_gtfs_stop_id_gtfs_stop')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gtfs_route_stop'))
    )
    op.create_index(op.f('ix_gtfs_route_stop_gtfs_route_id'), 'gtfs_route_stop', ['gtfs_route_id'], unique=False)
    op.create_index(op.f('ix_gtfs_route_stop_gtfs_stop_id'), 'gtfs_route_stop', ['gtfs_stop_id'], unique=False)
    op.create_index(op.f('ix_gtfs_route_stop_order'), 'gtfs_route_stop', ['order'], unique=False)
    op.create_table('gtfs_ride_stop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gtfs_stop_id', sa.Integer(), nullable=True),
    sa.Column('gtfs_ride_id', sa.Integer(), nullable=True),
    sa.Column('arrival_time', sa.String(), nullable=True),
    sa.Column('departure_time', sa.String(), nullable=True),
    sa.Column('stop_sequence', sa.Integer(), nullable=True),
    sa.Column('pickup_type', sa.Integer(), nullable=True),
    sa.Column('drop_off_type', sa.Integer(), nullable=True),
    sa.Column('shape_dist_traveled', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gtfs_ride_id'], ['gtfs_ride.id'], name=op.f('fk_gtfs_ride_stop_gtfs_ride_id_gtfs_ride')),
    sa.ForeignKeyConstraint(['gtfs_stop_id'], ['gtfs_stop.id'], name=op.f('fk_gtfs_ride_stop_gtfs_stop_id_gtfs_stop')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gtfs_ride_stop'))
    )
    op.create_index(op.f('ix_gtfs_ride_stop_gtfs_ride_id'), 'gtfs_ride_stop', ['gtfs_ride_id'], unique=False)
    op.create_index(op.f('ix_gtfs_ride_stop_gtfs_stop_id'), 'gtfs_ride_stop', ['gtfs_stop_id'], unique=False)
    op.drop_index('ix_ride_stop_is_from_gtfs', table_name='ride_stop')
    op.drop_index('ix_ride_stop_ride_id', table_name='ride_stop')
    op.drop_index('ix_ride_stop_stop_id', table_name='ride_stop')
    op.drop_table('ride_stop')
    op.drop_index('ix_route_stop_is_from_gtfs', table_name='route_stop')
    op.drop_index('ix_route_stop_order', table_name='route_stop')
    op.drop_index('ix_route_stop_route_id', table_name='route_stop')
    op.drop_index('ix_route_stop_stop_id', table_name='route_stop')
    op.drop_table('route_stop')
    op.drop_index('ix_stop_code', table_name='stop')
    op.drop_index('ix_stop_is_from_gtfs', table_name='stop')
    op.drop_index('ix_stop_max_date', table_name='stop')
    op.drop_index('ix_stop_min_date', table_name='stop')
    op.drop_table('stop')
    op.drop_index('ix_ride_is_from_gtfs', table_name='ride')
    op.drop_index('ix_ride_journey_ref', table_name='ride')
    op.drop_index('ix_ride_route_id', table_name='ride')
    op.drop_index('ix_ride_scheduled_start_time', table_name='ride')
    op.drop_index('ix_ride_vehicle_ref', table_name='ride')
    op.drop_table('ride')
    op.drop_index('ix_route_is_from_gtfs', table_name='route')
    op.drop_index('ix_route_line_ref', table_name='route')
    op.drop_index('ix_route_max_date', table_name='route')
    op.drop_index('ix_route_min_date', table_name='route')
    op.drop_index('ix_route_operator_ref', table_name='route')
    op.drop_table('route')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('route',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('route_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('min_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('max_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('line_ref', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('operator_ref', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('siri_published_line_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_short_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_long_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_mkt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_direction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_alternative', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_agency_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_route_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_from_gtfs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_route'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_route_operator_ref', 'route', ['operator_ref'], unique=False)
    op.create_index('ix_route_min_date', 'route', ['min_date'], unique=False)
    op.create_index('ix_route_max_date', 'route', ['max_date'], unique=False)
    op.create_index('ix_route_line_ref', 'route', ['line_ref'], unique=False)
    op.create_index('ix_route_is_from_gtfs', 'route', ['is_from_gtfs'], unique=False)
    op.create_table('ride',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('ride_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('journey_ref', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scheduled_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('vehicle_ref', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_from_gtfs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route.id'], name='fk_ride_route_id_route'),
    sa.PrimaryKeyConstraint('id', name='pk_ride'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_ride_vehicle_ref', 'ride', ['vehicle_ref'], unique=False)
    op.create_index('ix_ride_scheduled_start_time', 'ride', ['scheduled_start_time'], unique=False)
    op.create_index('ix_ride_route_id', 'ride', ['route_id'], unique=False)
    op.create_index('ix_ride_journey_ref', 'ride', ['journey_ref'], unique=False)
    op.create_index('ix_ride_is_from_gtfs', 'ride', ['is_from_gtfs'], unique=False)
    op.create_table('ride_stop',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ride_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_from_gtfs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('gtfs_stop_sequence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gtfs_pickup_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gtfs_drop_off_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gtfs_shape_dist_traveled', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gtfs_arrival_time', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gtfs_departure_time', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ride_id'], ['ride.id'], name='fk_ride_stop_ride_id_ride'),
    sa.ForeignKeyConstraint(['stop_id'], ['stop.id'], name='fk_ride_stop_stop_id_stop'),
    sa.PrimaryKeyConstraint('id', name='pk_ride_stop')
    )
    op.create_index('ix_ride_stop_stop_id', 'ride_stop', ['stop_id'], unique=False)
    op.create_index('ix_ride_stop_ride_id', 'ride_stop', ['ride_id'], unique=False)
    op.create_index('ix_ride_stop_is_from_gtfs', 'ride_stop', ['is_from_gtfs'], unique=False)
    op.create_table('route_stop',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_from_gtfs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['route.id'], name='fk_route_stop_route_id_route'),
    sa.ForeignKeyConstraint(['stop_id'], ['stop.id'], name='fk_route_stop_stop_id_stop'),
    sa.PrimaryKeyConstraint('id', name='pk_route_stop')
    )
    op.create_index('ix_route_stop_stop_id', 'route_stop', ['stop_id'], unique=False)
    op.create_index('ix_route_stop_route_id', 'route_stop', ['route_id'], unique=False)
    op.create_index('ix_route_stop_order', 'route_stop', ['order'], unique=False)
    op.create_index('ix_route_stop_is_from_gtfs', 'route_stop', ['is_from_gtfs'], unique=False)
    op.create_table('stop',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('min_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('max_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_from_gtfs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_stop')
    )
    op.create_index('ix_stop_min_date', 'stop', ['min_date'], unique=False)
    op.create_index('ix_stop_max_date', 'stop', ['max_date'], unique=False)
    op.create_index('ix_stop_is_from_gtfs', 'stop', ['is_from_gtfs'], unique=False)
    op.create_index('ix_stop_code', 'stop', ['code'], unique=False)
    op.drop_index(op.f('ix_gtfs_ride_stop_gtfs_stop_id'), table_name='gtfs_ride_stop')
    op.drop_index(op.f('ix_gtfs_ride_stop_gtfs_ride_id'), table_name='gtfs_ride_stop')
    op.drop_table('gtfs_ride_stop')
    op.drop_index(op.f('ix_gtfs_route_stop_order'), table_name='gtfs_route_stop')
    op.drop_index(op.f('ix_gtfs_route_stop_gtfs_stop_id'), table_name='gtfs_route_stop')
    op.drop_index(op.f('ix_gtfs_route_stop_gtfs_route_id'), table_name='gtfs_route_stop')
    op.drop_table('gtfs_route_stop')
    op.drop_index(op.f('ix_gtfs_ride_vehicle_ref'), table_name='gtfs_ride')
    op.drop_index(op.f('ix_gtfs_ride_scheduled_start_time'), table_name='gtfs_ride')
    op.drop_index(op.f('ix_gtfs_ride_journey_ref'), table_name='gtfs_ride')
    op.drop_index(op.f('ix_gtfs_ride_gtfs_route_id'), table_name='gtfs_ride')
    op.drop_table('gtfs_ride')
    op.drop_index(op.f('ix_gtfs_stop_date'), table_name='gtfs_stop')
    op.drop_index(op.f('ix_gtfs_stop_code'), table_name='gtfs_stop')
    op.drop_table('gtfs_stop')
    op.drop_index(op.f('ix_gtfs_route_operator_ref'), table_name='gtfs_route')
    op.drop_index(op.f('ix_gtfs_route_line_ref'), table_name='gtfs_route')
    op.drop_index(op.f('ix_gtfs_route_date'), table_name='gtfs_route')
    op.drop_table('gtfs_route')
    # ### end Alembic commands ###
