name: CI
on:
  push:
jobs:
  ci:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - env:
        DOCKER_APP_IMAGE_NAME: "docker.pkg.github.com/hasadna/open-bus-stride-db/open-bus-stride-db"
        DOCKER_BACKUP_IMAGE_NAME: "docker.pkg.github.com/hasadna/open-bus-stride-db/open-bus-stride-db-backup"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HASADNA_K8S_DEPLOY_KEY: ${{ secrets.HASADNA_K8S_DEPLOY_KEY }}
        SIRI_ETL_DEPLOY_KEY: ${{ secrets.SIRI_ETL_DEPLOY_KEY }}
        STRIDE_API_DEPLOY_KEY: ${{ secrets.STRIDE_API_DEPLOY_KEY }}
      run: |
        echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u hasadna --password-stdin &&\
        if docker pull "${DOCKER_APP_IMAGE_NAME}:latest"; then
          CACHE_FROM_ARG="--cache-from ${DOCKER_APP_IMAGE_NAME}:latest"
        else
          CACHE_FROM_ARG=""
        fi &&\
        docker build $CACHE_FROM_ARG -t app . &&\
        docker tag app "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}" &&\
        docker push "${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}" &&\
        if docker pull "${DOCKER_BACKUP_IMAGE_NAME}:latest"; then
          CACHE_FROM_ARG="--cache-from ${DOCKER_BACKUP_IMAGE_NAME}:latest"
        else
          CACHE_FROM_ARG=""
        fi &&\
        docker build $CACHE_FROM_ARG -t backup backup &&\
        docker tag backup "${DOCKER_BACKUP_IMAGE_NAME}:${GITHUB_SHA}" &&\
        docker push "${DOCKER_BACKUP_IMAGE_NAME}:${GITHUB_SHA}" &&\
        docker run -e POSTGRES_PASSWORD=123456 -p 5432:5432 -v `pwd`/.data/db:/var/lib/postgresql/data -d postgres:13 &&\
        sleep 5 &&\
        docker run --network host -e SQLALCHEMY_URL=postgresql://postgres:123456@localhost app &&\
        if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
          docker tag app "${DOCKER_APP_IMAGE_NAME}:latest" &&\
          docker push "${DOCKER_APP_IMAGE_NAME}:latest" &&\
          docker tag backup "${DOCKER_BACKUP_IMAGE_NAME}:latest" &&\
          docker push "${DOCKER_BACKUP_IMAGE_NAME}:latest" &&\
          if ! git log -1 --pretty=format:"%s" | grep -- --no-deploy; then
            cd `mktemp -d` &&\
            echo "${HASADNA_K8S_DEPLOY_KEY}" > hasadna_k8s_deploy_key &&\
            chmod 400 hasadna_k8s_deploy_key &&\
            export GIT_SSH_COMMAND="ssh -i `pwd`/hasadna_k8s_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
            git clone git@github.com:hasadna/hasadna-k8s.git &&\
            cd hasadna-k8s &&\
            python update_yaml.py '{"openbus":{"strideDbAppImage":"'"${DOCKER_APP_IMAGE_NAME}:${GITHUB_SHA}"'"}}' ./values.auto-updated.yaml &&\
            git config --global user.name "Open Bus Stride DB CI" &&\
            git config --global user.email "open-bus-stride-db-ci@localhost" &&\
            git add ./values.auto-updated.yaml && git commit -m "automatic update of open bus stride db" &&\
            git push origin master &&\
            echo "${SIRI_ETL_DEPLOY_KEY}" > siri_etl_deploy_key &&\
            chmod 400 siri_etl_deploy_key &&\
            export GIT_SSH_COMMAND="ssh -i `pwd`/siri_etl_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
            git clone git@github.com:hasadna/open-bus-siri-etl.git &&\
            cd open-bus-siri-etl &&\
            bin/update_stride_db_dependencies.py "${GITHUB_SHA}" &&\
            git commit -m "automatic update of open bus stride db dependencies" &&\
            git push origin main &&\
            echo "${STRIDE_API_DEPLOY_KEY}" > stride_api_deploy_key &&\
            chmod 400 stride_api_deploy_key &&\
            export GIT_SSH_COMMAND="ssh -i `pwd`/stride_api_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
            git clone git@github.com:hasadna/open-bus-stride-api.git &&\
            cd open-bus-stride-api &&\
            bin/update_stride_db_dependencies.py "${GITHUB_SHA}" &&\
            git commit -m "automatic update of open bus stride db dependencies" &&\
            git push origin main
          fi
        fi
